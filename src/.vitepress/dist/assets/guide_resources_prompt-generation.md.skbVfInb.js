import{_ as r,c as o,j as e,a as t,t as a,a4 as i,o as s}from"./chunks/framework.aUXblELp.js";const A=JSON.parse('{"title":"CLI Reference","description":"","frontmatter":{"title":"CLI Reference","app_name":"Reason AI","api_name":"Inference API","api_names":"Inference APIs","functions_name":"Reason Function","functions_names":"Reason Functions","cmd":"reasonai","cmd_api":"api","cmd_fn":"function"},"headers":[],"relativePath":"guide/resources/prompt-generation.md","filePath":"guide/resources/prompt-generation.md"}'),l={name:"guide/resources/prompt-generation.md"},c=e("h1",{id:"prompt-generation",tabindex:"-1"},[t("Prompt Generation "),e("a",{class:"header-anchor",href:"#prompt-generation","aria-label":'Permalink to "Prompt Generation"'},"​")],-1),p={id:"frontmatter-api-name-instruction",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#frontmatter-api-name-instruction","aria-label":'Permalink to "{{$frontmatter.api_name}} Instruction"'},"​",-1),d=i('<h3 id="prerequites" tabindex="-1">Prerequites <a class="header-anchor" href="#prerequites" aria-label="Permalink to &quot;Prerequites&quot;">​</a></h3><p>Before working on the best instruction, it is best to consider the following, according to Anthropic:</p><ul><li>Have a clear definition of the success criteria</li><li>Find a way to empirically test against the defined success criteria</li><li>Make a first draft prompt and improve it later</li></ul><p>Check out <a href="https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/overview" target="_blank" rel="noreferrer">Anthropic&#39;s documentation</a> for more on how to get through each step</p><p>Also checkout <a href="https://platform.openai.com/docs/guides/prompt-engineering" target="_blank" rel="noreferrer">OpenAI&#39;s documentation</a> on prompt prompt-engineering if you use their models</p><h2 id="example-instructions" tabindex="-1">Example Instructions <a class="header-anchor" href="#example-instructions" aria-label="Permalink to &quot;Example Instructions&quot;">​</a></h2>',6),m=e("h3",{id:"_1-users-api",tabindex:"-1"},[t("1. Users API "),e("a",{class:"header-anchor",href:"#_1-users-api","aria-label":'Permalink to "1. Users API"'},"​")],-1),h=e("ul",null,[e("li",null,[e("ol",null,[e("li",null,"Get a list of users")])]),e("li",null,[e("ol",{start:"2"},[e("li",null,[t("Get a single user given a "),e("code",null,"userId"),t(" value")])])]),e("li",null,[e("ol",{start:"3"},[e("li",null,"Create a user given an input")])])],-1);function f(n,_,g,I,b,P){return s(),o("div",null,[c,e("h2",p,[t(a(n.$frontmatter.api_name)+" Instruction ",1),u]),e("p",null,a(n.$frontmatter.api_name)+" requires the instruction field to be properly defined to get the best out of the AI model.",1),d,e("p",null,"Consider the followind scenarios and example Instructions made for the "+a(n.$frontmatter.api_name),1),m,e("p",null,"We want to create an "+a(n.$frontmatter.api_name)+" that handles user information. It can do the following:",1),h])}const x=r(l,[["render",f]]);export{A as __pageData,x as default};
