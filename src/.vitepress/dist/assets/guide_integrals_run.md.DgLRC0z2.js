import{_ as o,c as k,j as s,a as i,t as n,I as t,w as l,a4 as e,D as p,o as u}from"./chunks/framework.aUXblELp.js";const J=JSON.parse('{"title":"Running an {{$frontmatter.feature_single}}","description":"","frontmatter":{"app_name":"Reason AI","app_name_short":"Reason","func_names":"Reason Functions","func_name":"Reason Function","integral_names":"Integrals","integral_name":"Integral"},"headers":[],"relativePath":"guide/integrals/run.md","filePath":"guide/integrals/run.md"}'),d={name:"guide/integrals/run.md"},c={id:"running-an-frontmatter-feature-single",tabindex:"-1"},g=s("a",{class:"header-anchor",href:"#running-an-frontmatter-feature-single","aria-label":'Permalink to "Running an {{$frontmatter.feature_single}}"'},"​",-1),E={class:"note custom-block github-alert"},m=s("p",{class:"custom-block-title"},"NOTE",-1),F=s("a",{href:"./../introduction/getting-started"},"setup your environment",-1),b={id:"how-to-run-frontmatter-integral-name",tabindex:"-1"},y=s("a",{class:"header-anchor",href:"#how-to-run-frontmatter-integral-name","aria-label":'Permalink to "How to Run {{$frontmatter.integral_name}}"'},"​",-1),_=s("h2",{id:"testing-locally",tabindex:"-1"},[i("Testing locally "),s("a",{class:"header-anchor",href:"#testing-locally","aria-label":'Permalink to "Testing locally"'},"​")],-1),C=s("p",null,"First make sure you have the latest version by pulling remote version",-1),f=s("div",{class:"language-bash vp-adaptive-theme line-numbers-mode"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"reasonai"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," api"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pull")])])]),s("div",{class:"line-numbers-wrapper","aria-hidden":"true"},[s("span",{class:"line-number"},"1"),s("br")])],-1),q=s("p",null,"Next run the test command and follow the prompts to test locally",-1),B=s("div",{class:"language-bash vp-adaptive-theme line-numbers-mode"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"reasonai"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," api"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," <"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"yourAPINam"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"e"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">")])])]),s("div",{class:"line-numbers-wrapper","aria-hidden":"true"},[s("span",{class:"line-number"},"1"),s("br")])],-1),v=s("p",null,"The command will ask you for a full message to send to the API. Your message should include values for any function variables if any",-1),T={class:"tip custom-block"},P=s("p",{class:"custom-block-title"},"TIP",-1),I=e(`<p>Given the example API below, we could formulate a message as follows:</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;charactersAPI&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;instruction&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Given an employee id, you call a function to get the employee data&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;model&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gpt-4o-mini&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;responseFormat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;json_object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;getEmployeeDataById&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;function&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Message: <code>get data for employee with id 123</code></p><p>With OpenAI models, you can specify the format of the response in the instruction or even the request message With Anthropic however, it is best to let a function return the desired response if you are not getting the correct JSON.</p><p>Reason Inference Engine attempts to extract json from the response if you have set the responseFormat to JSON on the API</p>`,5),A=e('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To learn more on effective prompt generations, <a href="./../resources/prompt-generation">click here</a></p></div><h2 id="running-live" tabindex="-1">Running Live <a class="header-anchor" href="#running-live" aria-label="Permalink to &quot;Running Live&quot;">​</a></h2>',2),w=e(`<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://reasonai.dev/api/v1/request</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Authorization: Bearer &lt;your api key here&gt;&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;apiId&quot;: &quot;&lt;copy from ./reason/.meta.json&gt;&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;role&quot;: &quot;user&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;content&quot;: &quot;what is the starsign of a person born in April 1992&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  }&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>You should receive results similar to:</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;your-api-id&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;threadId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;thread_6zY61bNiZX08Yt15MVolgaue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;messages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;msg_54vENtcnHHojV8sBL7HkB7ol&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sign</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Aries</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>:::</p>`,4),$={class:"tip custom-block"},S=s("p",{class:"custom-block-title"},"TIP",-1),N=s("a",{href:"./../../reference/api"},"click here",-1),R=s("h2",{id:"next-steps",tabindex:"-1"},[i("Next Steps "),s("a",{class:"header-anchor",href:"#next-steps","aria-label":'Permalink to "Next Steps"'},"​")],-1),x={href:"./../resources/prompt-generation"},V=s("a",{href:"./../../reference/function"},"Generate descriptions and inputs",-1);function D(a,j,Y,O,H,L){const r=p("PluginTabsTab"),h=p("PluginTabs");return u(),k("div",null,[s("h1",c,[i("Running an "+n(a.$frontmatter.feature_single)+" ",1),g]),s("p",null,"The "+n(a.$frontmatter.integral_name)+" is where you create your API handlers. A single "+n(a.$frontmatter.integral_name)+" can handle multiple traditional API requests as defined by your prompt",1),s("div",E,[m,s("p",null,[i("You need to "),F,i(" before creating "+n(a.$frontmatter.integral_name),1)])]),s("h2",b,[i("How to Run "+n(a.$frontmatter.integral_name)+" ",1),y]),s("p",null,"You can run your "+n(a.$frontmatter.integral_name)+" by calling the REST API endpoint or by testing locally using the CLI tool",1),_,t(h,{sharedStateKey:"pref"},{default:l(()=>[t(r,{label:"CLI"},{default:l(()=>[C,f,q,B,v,s("div",T,[P,s("p",null,"You can also test the "+n(a.$frontmatter.integral_name)+" on the web console",1)])]),_:1})]),_:1}),I,s("p",null,"That's it. Your "+n(a.$frontmatter.integral_name)+" is deployed and live",1),A,s("p",null,"The live API is available by calling the "+n(a.$frontmatter.app_name)+" endpoint:",1),w,s("div",$,[S,s("p",null,[i("To see the full API reference for running your "+n(a.$frontmatter.integral_name)+", ",1),N])]),R,s("p",null,"You've learned how to run an "+n(a.$frontmatter.integral_name),1),s("ul",null,[s("li",null,[i("next look at how to "),s("a",x,"generate prompts for "+n(a.$frontmatter.integral_name),1)]),s("li",null,[i("Or "),V,i(" to your "+n(a.$frontmatter.app_name_short)+" Functions",1)])])])}const z=o(d,[["render",D]]);export{J as __pageData,z as default};
