import{_ as i,c as l,j as s,a as t,t as a,a4 as n,o as r}from"./chunks/framework.aUXblELp.js";const $=JSON.parse('{"title":"API Reference","description":"","frontmatter":{"app_name":"Reason AI","app_name_short":"Reason","func_names":"Reason Functions","func_name":"Reason Function","integral_names":"Integrals","integral_name":"Integral"},"headers":[],"relativePath":"reference/api.md","filePath":"reference/api.md"}'),h={name:"reference/api.md"},d=s("h1",{id:"api-reference",tabindex:"-1"},[t("API Reference "),s("a",{class:"header-anchor",href:"#api-reference","aria-label":'Permalink to "API Reference"'},"â€‹")],-1),p=s("p",null,"One endpoint to run them all ðŸ’¯",-1),o={id:"run-frontmatter-integral-name",tabindex:"-1"},u=s("a",{class:"header-anchor",href:"#run-frontmatter-integral-name","aria-label":'Permalink to "Run {{$frontmatter.integral_name}}"'},"â€‹",-1),k=s("p",null,[s("code",null,"POST /api/v1/inference/request")],-1),c=s("h3",{id:"input-parameters",tabindex:"-1"},[t("Input Parameters "),s("a",{class:"header-anchor",href:"#input-parameters","aria-label":'Permalink to "Input Parameters"'},"â€‹")],-1),E={tabindex:"0"},g=s("thead",null,[s("tr",null,[s("th",null,"Parameter"),s("th",null,"Type"),s("th",null,"Description"),s("th",null,"Required"),s("th",null,"Default")])],-1),m=s("td",null,[s("code",null,"apiId")],-1),b=s("td",null,"string",-1),y=s("td",null,"Yes",-1),_=s("td",null,null,-1),F=s("tr",null,[s("td",null,[s("code",null,"messages")]),s("td",null,[s("code",null,"Message"),t("[]")]),s("td",null,"An array of messages to send to the api"),s("td",null,"Yes"),s("td")],-1),q=s("tr",null,[s("td",null,[s("code",null,"threadId")]),s("td",null,"string, undefined"),s("td",null,"When passed, the message will be run on the provided thread. if no threadId is provided, each request will create a new thread and return its id"),s("td",null,"No"),s("td",null,"undefined")],-1),C=s("tr",null,[s("td",null,[s("code",null,"replyWith")]),s("td",null,"thread, message"),s("td",null,[t("Specifies how much data to return in reply. if no "),s("code",null,"replyWith"),t(" is provided, it defaults to message. Setting it to thread returns the entire conversation on the thread.")]),s("td",null,"No"),s("td",null,"message")],-1),f=n("",5),B={tabindex:"0"},x=s("thead",null,[s("tr",null,[s("th",null,"Parameter"),s("th",null,"Type"),s("th",null,"Description")])],-1),T=s("td",null,[s("code",null,"id")],-1),P=s("td",null,"string",-1),v=s("tr",null,[s("td",null,[s("code",null,"threadId")]),s("td",null,"string"),s("td",null,"Id of the thread on whicht he request was run")],-1),I=s("tr",null,[s("td",null,[s("code",null,"messages")]),s("td",null,[s("code",null,"Message")]),s("td",null,"Object of the message returned")],-1),R=n("",6);function S(e,N,w,A,D,O){return r(),l("div",null,[d,p,s("h2",o,[t("Run "+a(e.$frontmatter.integral_name)+" ",1),u]),k,s("p",null,"Runs an "+a(e.$frontmatter.integral_name)+" passing it input and expecting an output",1),c,s("table",E,[g,s("tbody",null,[s("tr",null,[m,b,s("td",null,"The id of the "+a(e.$frontmatter.integral_name)+" being used",1),y,_]),F,q,C])]),f,s("table",B,[x,s("tbody",null,[s("tr",null,[T,P,s("td",null,"The "+a(e.$frontmatter.integral_name)+" id",1)]),v,I])]),R])}const j=i(h,[["render",S]]);export{$ as __pageData,j as default};
